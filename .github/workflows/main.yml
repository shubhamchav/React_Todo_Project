name: CI + CD for React App

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Adjust based on your project

      - name: Install Dependencies
        run: npm install

      - name: Build React App
        run: npm run build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: react-build
          path: build/

  DeployDev:
    name: Deploy to GitHub Pages (Dev)
    if: github.event_name == 'pull_request'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Development
      url: 'http://localhost:3000/'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: react-build
          path: build/

  DeployStaging:
    name: Deploy to Staging (EC2)
    if: github.event.ref == 'refs/heads/master'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Staging
      url: 'http://44.202.30.0 /'
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: react-build
          path: build/

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy React App to Staging Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_STAGING }} "rm -rf /var/www/staging/*"
          scp -r -o StrictHostKeyChecking=no build/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_STAGING }}:/var/www/staging/
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_STAGING }} "sudo systemctl restart nginx"

  DeployProd:
    name: Deploy to Production (EC2)
    needs: [DeployStaging]
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: 'http://18.212.201.3/'
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: react-build
          path: build/

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy React App to Production Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_PROD }} "rm -rf /var/www/production/*"
          scp -r -o StrictHostKeyChecking=no build/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_PROD }}:/var/www/production/
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_PROD }} "sudo systemctl restart nginx"
